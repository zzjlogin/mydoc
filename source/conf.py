# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#


# -- Project information -----------------------------------------------------

project = u'我的技术文档'
copyright = u'2018, zzjlogin'
author = u'zzjlogin'

# The short X.Y version
import time

#version = u'2018.8'
#show the version use now time
version = time.strftime("%Y-%m")
#version = time.strftime("%Y-%m-%d ")
# %a 星期几的简写
# %A 星期几的全称
# %b 月分的简写
# %B 月份的全称
# %c 标准的日期的时间串
# %C 年份的后两位数字
# %d 十进制表示的每月的第几天
# %D 月/天/年
# %e 在两字符域中，十进制表示的每月的第几天
# %F 年-月-日
# %g 年份的后两位数字，使用基于周的年
# %G 年分，使用基于周的年
# %h 简写的月份名
# %H 24小时制的小时
# %I 12小时制的小时
# %j 十进制表示的每年的第几天
# %m 十进制表示的月份
# %M 十时制表示的分钟数
# %n 新行符
# %p 本地的AM或PM的等价显示
# %r 12小时的时间
# %R 显示小时和分钟：hh:mm
# %S 十进制的秒数
# %t 水平制表符
# %T 显示时分秒：hh:mm:ss
# %u 每周的第几天，星期一为第一天 （值从0到6，星期一为0）
# %U 第年的第几周，把星期日做为第一天（值从0到53）
# %V 每年的第几周，使用基于周的年
# %w 十进制表示的星期几（值从0到6，星期天为0）
# %W 每年的第几周，把星期一做为第一天（值从0到53）
# %x 标准的日期串
# %X 标准的时间串
# %y 不带世纪的十进制年份（值从0到99）
# %Y 带世纪部分的十制年份
# %z，%Z 时区名称，如果不能得到时区名称则返回空字符。
# %% 百分号

# The full version, including alpha/beta/rc tags
release = u'1.0'

#do not show the document build by sphinx in subscript.
html_show_sphinx = False
#show the copyright in the subscript
html_show_copyright = False
#do not show the buttom to show the rst source code
html_show_sourcelink = False

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.todo',
    'sphinx.ext.viewcode',
    'sphinx.ext.githubpages',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
#language = u'zh_CN'
language = u'zh_CN'
# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'alabaster'
html_theme = 'sphinx_rtd_theme'

#html_search_language = 'zh'

#setting the homepage logo
#html_logo = './logo.png'
html_logo = './images/logo-wordmark-light.svg'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}
html_theme_options = {
    #'typekit_id': '',
    'canonical_url': '',
    'analytics_id': '',
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location':'both',
    #'style_external_links': False,
    # Toc options
    'collapse_navigation': False,
    'sticky_navigation': True,
    'navigation_depth': 4,
    #'includehidden': False,
    #'titles_only': False
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'mydoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'mydoc.tex', u'mydoc Documentation',
     u'zzjlogin', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'mydoc', u'mydoc Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'mydoc', u'mydoc Documentation',
     author, 'mydoc', 'One line description of project.',
     'Miscellaneous'),
]

# -- Extension configuration -------------------------------------------------

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True