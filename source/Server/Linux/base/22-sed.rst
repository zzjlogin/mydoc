.. _server-linux-base-sed:

===============================================
文本处理工具之sed
===============================================

:Date: 2018-09-02

.. contents::



sed简介
===============================================

sed是linux文本处理工具的三件套之一。

sed介绍
     stream editor for filtering and transforming text，sed是流编辑器。一般sed更擅长文本的行操作。

     sed 全名为 stream editor，流编辑器，用程序的方式来编辑文本，功能相当的强大。是贝尔实验室的 Lee E.McMahon 在 1973 年到 1974 年之间开发完成，目前可以在大多数操作系统中使用，sed 的出现作为 grep 的继任者。与vim等编辑器不同，sed 是一种非交互式编辑器(即用户不必参与编辑过程)，它使用预先设定好的编辑指令对输入的文本进行编辑，完成之后再输出编辑结构。sed 基本上就是在玩正则模式匹配，
sed工作原理
    sed会一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，成为"模式空间"，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。



sed详解
===============================================

命令格式
-----------------------------------------------

sed [选项]... {脚本(如果没有其他脚本)} [输入文件]...


命令参数
-------------------------------------------------

.. attention::
    重点常用参数:
        - ``-n`` 结合子命令 ``p``
        - ``-i`` 用来处理文本内容替换。用这个参数才能替换文件中指定内容并写入文件。


1. 参数

========    =====================================================================
**参数**            **含义作用**
--------    ---------------------------------------------------------------------
-n          只打印模式匹配的行
--------    ---------------------------------------------------------------------
-e          直接在命令行模式上进行sed动作编辑，此为默认选项
--------    ---------------------------------------------------------------------
-f          将sed的动作写在一个文件内，用–f filename 执行filename内的sed动作
--------    ---------------------------------------------------------------------
-r          支持扩展表达式
--------    ---------------------------------------------------------------------
-i          直接修改文件内容
========    =====================================================================

2. 子命令

======== ====================================================================================================================
**命令**      **作用**
-------- --------------------------------------------------------------------------------------------------------------------
a        在当前行下面插入文本。
-------- --------------------------------------------------------------------------------------------------------------------
i        在当前行上面插入文本。
-------- --------------------------------------------------------------------------------------------------------------------
c        把选定的行改为新的文本。
-------- --------------------------------------------------------------------------------------------------------------------
d        删除，删除选择的行。
-------- --------------------------------------------------------------------------------------------------------------------
D        删除模板块的第一行。
-------- --------------------------------------------------------------------------------------------------------------------
s        替换指定字符
-------- --------------------------------------------------------------------------------------------------------------------
h        拷贝模板块的内容到内存中的缓冲区。
-------- --------------------------------------------------------------------------------------------------------------------
H        追加模板块的内容到内存中的缓冲区。
-------- --------------------------------------------------------------------------------------------------------------------
g        获得内存缓冲区的内容，并替代当前模板块中的文本。
-------- --------------------------------------------------------------------------------------------------------------------
G        获得内存缓冲区的内容，并追加到当前模板块文本的后面。
-------- --------------------------------------------------------------------------------------------------------------------
l        列表不能打印字符的清单。
-------- --------------------------------------------------------------------------------------------------------------------
n        读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。
-------- --------------------------------------------------------------------------------------------------------------------
N        追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。
-------- --------------------------------------------------------------------------------------------------------------------
p        打印模板块的行。
-------- --------------------------------------------------------------------------------------------------------------------
P(大写)  打印模板块的第一行。
-------- --------------------------------------------------------------------------------------------------------------------
q        退出Sed。
-------- --------------------------------------------------------------------------------------------------------------------
b        lable分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。
-------- --------------------------------------------------------------------------------------------------------------------
r        file从file中读行。
-------- --------------------------------------------------------------------------------------------------------------------
t        label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。
-------- --------------------------------------------------------------------------------------------------------------------
T        label错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。
-------- --------------------------------------------------------------------------------------------------------------------
w        file写并追加模板块到file末尾。
-------- --------------------------------------------------------------------------------------------------------------------
W        file写并追加模板块的第一行到file末尾。
-------- --------------------------------------------------------------------------------------------------------------------
!        表示后面的命令对所有没有被选定的行发生作用。
-------- --------------------------------------------------------------------------------------------------------------------
=        打印当前行号码。
-------- --------------------------------------------------------------------------------------------------------------------
#        把注释扩展到下一个换行符以前。
======== ==================================================================================================================== 

3. 替换标记

=========== ==================================================
g           表示行内全面替换。
----------- --------------------------------------------------
p           表示打印行。
----------- --------------------------------------------------
w           表示把行写入一个文件。
----------- --------------------------------------------------
x           表示互换模板块中的文本和缓冲区中的文本。
----------- --------------------------------------------------
y           表示把一个字符翻译为另外的字符（但是不用于正则表达式）
----------- --------------------------------------------------
\1          子串匹配标记
----------- --------------------------------------------------
&           已匹配字符串标记
=========== ==================================================


sed实例
===============================================

1. 参数 ``-n``

.. code-block:: bash
    :linenos:

    [root@zzjlogin ~]# echo -e 'hello world\nnihao' | sed 's/hello/A/'    
    A world
    nihao
    [root@zzjlogin ~]# echo -e 'hello world\nnihao' | sed -n 's/hello/A/' 
    [root@zzjlogin ~]# echo -e 'hello world\nnihao' | sed -n 's/hello/A/p'
    A world

.. tip::
    参数 ``-n`` 是只打印匹配的行，后面是替换操作，所以 ``s`` 和 ``p`` 是替换命令，如果没有替换后的打印命令 ``p``也是不能打印的。

2. 参数 ``-e``

使用参数 ``-e`` 可以在多次处理，而不用每次处理结果用管道连接后再处理。

参考下面实例：


.. code-block:: bash
    :linenos:

    [root@zzjlogin ~]# echo -e 'hello world' | sed -e 's/hello/A/' -e 's/world/B/'
    A B
    [root@zzjlogin ~]# echo -e 'hello world' | sed 's/hello/A/;s/world/B/'
    A B


3. 参数 ``-i``

sed默认会把输入行读取到模式空间，简单理解就是一个内存缓冲区，sed子命令处理的内容是模式空间中的内容，
而非直接处理文件内容。因此在sed修改模式空间内容之后，并非直接写入修改输入文件，而是打印输出到标准输出。
如果需要修改输入文件，那么就可以指定-i选项。

.. attention::
    参数 ``-i`` 替换文件内容时，替换标记命令的 ``p`` 不可以一起用，否则会出现替换文件中有两行。

.. code-block:: bash
    :linenos:

    [root@zzjlogin ~]# cat test.txt
    hello world
    [root@zzjlogin ~]# sed 's/hello/A/' test.txt
    A world
    [root@zzjlogin ~]# cat test.txt
    hello world
    [root@zzjlogin ~]# sed -i 's/hello/A/' test.txt
    [root@zzjlogin ~]# cat test.txt                
    A world

.. tip::
    默认匹配替换每行第一次匹配的地方，如果把文件中所有匹配的都替换，需要用替换标记命令 ``g``

.. code-block:: bash
    :linenos:

    [root@zzjlogin ~]# cat test.txt                 
    hello world
    hello world
    hello world
    hello world hello

    [root@zzjlogin ~]# sed -i 's/hello/A/' test.txt                 
    [root@zzjlogin ~]# cat test.txt                
    A world
    A world
    A world
    A world hello

    [root@zzjlogin ~]# sed -i 's/A/hello/' test.txt                
    [root@zzjlogin ~]# cat test.txt                                
    hello world
    hello world
    hello world
    hello world hello

    [root@zzjlogin ~]# sed -i 's/hello/A/g' test.txt                                 
    [root@zzjlogin ~]# cat test.txt                 
    A world
    A world
    A world
    A world A

4. 参数 ``-r``

sed命令的匹配模式支持正则表达式的，默认只能支持基本正则表达式，如果需要支持扩展正则表达式，那么需要添加-r选项。

