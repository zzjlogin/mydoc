.. _python_buildin_operator:

======================================================================================================================================================
内置操作符
======================================================================================================================================================

.. contents::



boolean操作符
======================================================================================================================================================

.. csv-table::
   :header: "操作符","结果","注记"
   :widths: 30,40,50

   "x or y", "if x is false,then y, else x","短路操作，如果x为true，后续不判断了"
   "x and y","if x is false , then x else y","如果x是false了，y就不用在判断了"
   "not x","if is false,then true,else false",""

比较操作符号
======================================================================================================================================================

.. csv-table::
   :header: "操作符","描述","对应类方法"
   :widths: 30,40,30

    "<",	    "小于","__lt__()"
    "<=",	    "小于等于","__le__()"
    ">",	    "大于","__gt__()"
    ">=",	    "大于等于","__ge__()"
    "==",	    "等于","__eq__()"
    "!=",	    "不等于","__ne__()"
    "is",	    "对象识别","无"
    "is not",	"反向的对象识别","无"


Set Types — set, frozenset
------------------------------------------------------------------------------------------------------------------------------------------------------

集合类型

.. code-block:: python
    :linenos:

    # 创建一个集合
    In [180]: a=set()
    # 添加一个
    In [181]: a.add(1)
    # 查看
    In [182]: a
    Out[182]: {1}

    # 长度
    In [183]: len(a)
    Out[183]: 1

    # 判断是不是在集合中
    In [184]: 1 in a
    Out[184]: True

    In [185]: 2 in a
    Out[185]: False

    # 集合比较
    In [186]: set1=set()

    In [187]: set2=set()

    In [188]: set1.add(1)

    In [189]: set1.add(2)

    In [190]: set2.add(1)

    In [191]: set1<set2
    Out[191]: False

    In [193]: set1<=set2
    Out[193]: False

    In [194]: set1>=set2
    Out[194]: True

    # 清空集合
    In [195]: set1.clear()

    # 去除一个元素
    In [196]: set2.pop()
    Out[196]: 1

.. attention::

    集合是没有顺序的。但是集合的表现好像是有顺序。这个表现的顺序是固定的，但是初始顺序是不可预测的。

Mapping Types — dict
------------------------------------------------------------------------------------------------------------------------------------------------------

映射类型

样例： 

.. code-block:: python
    :linenos:

    In [197]: a = dict(one=1, two=2, three=3)

    In [198]: a
    Out[198]: {'one': 1, 'three': 3, 'two': 2}

    In [199]: type(a)
    Out[199]: dict

    In [200]: c = dict(zip(['one', 'two', 'three'], [1, 2, 3]))

    In [201]: c
    Out[201]: {'one': 1, 'three': 3, 'two': 2}

    In [202]: d = dict([('two', 2), ('one', 1), ('three', 3)])

    In [203]: d
    Out[203]: {'one': 1, 'three': 3, 'two': 2}

    # 长度
    In [204]: len(d)
    Out[204]: 3

    # 赋值
    In [205]: d["one"] =1

    # 查看
    In [206]: d["one"]
    Out[206]: 1

    # 删除属性
    In [207]: del d["one"]

    In [208]: d
    Out[208]: {'three': 3, 'two': 2}

    # 判断key 
    In [209]: "three" in d
    Out[209]: True

    # 复制
    In [210]: e = d.copy()

    In [211]: e
    Out[211]: {'three': 3, 'two': 2}

    # 获取特定属性，提供默认值，如果获取不到，使用默认值
    In [212]: d.get("three","5")
    Out[212]: 3

    In [213]: d.get("ten","5")