==========
高级语法
==========

表格学习
===============
表格主要包括：

1. 简单表格。
#. 网格。
#. 还可以通过外部文件引入表格。

正式的表格比reStructuredText语法所提供的需要更多结构。
表格可以使用 :ref:`表格 <dtr-table>` 指令指定标题。
有时reStructuredText表格不方便书写，或表格数据不是随手可得的标准格式。 :ref:`csv表格 <dt-csv-table>` 指令支持CSV数据。

.. _dt-table:

表格
------

:Directive Type: "table"
:Doctree Element: :ref:`表格 <dtr-table>`
:Directive Arguments: 1, optional (table title).
:Directive Options: `:class:`_, `:name:`_
:Directive Content: 一个普通的reStructuredText表格

(Docutils 0.3.1 新增)

表格指令用于创建一个带标题的表格，需要将标题关联到表格::

    .. table:: Truth table for "not"

       =====  =====
         A    not A
       =====  =====
       False  True
       True   False
       =====  =====


.. _dt-csv-table:

CSV Table
------------

:Directive Type: "csv-table"
:Doctree Element:  :ref:`表格 <dtr-table>`
:Directive Arguments: 1, optional (table title).
:Directive Options: Possible (see below).
:Directive Content: A CSV (comma-separated values) table.

.. WARNING::

   一个CSV(逗号分隔的值)表格

.. WARNING::

   "csv-table"指令的 ":file:" 和 ":url:" 选项表示一个潜在的安全漏洞。其可以使用":ref:`file_insertion_enabled <cfg-file-insertion-enabled>`" 运行时设置禁用。

(Docutils 0.3.4 新增)

"csv-table"指令用于通过CSV数据创建一个表格。CSV是一种由电子表格应用程序和树叶数据库生成的通用数据格式。数据可能是内部的(文件的一个组成部分)，也可能是外部的(一个单独的文件)。

举例::

    .. csv-table:: Frozen Delights!
       :header: "Treat", "Quantity", "Description"
       :widths: 15, 10, 30

       "Albatross", 2.99, "On a stick!"
       "Crunchy Frog", 1.49, "If we took the bones out, it wouldn't be
       crunchy, now would it?"
       "Gannet Ripple", 1.99, "On a stick!"

支持单元格内的块标记和行内标记。单元格内的行结束符能被识别

工作限制:

* 没有提供对各行的列数是否一致的检查。但该指令通过自动添加空条目
  支持不会在短行之后插入空条目的CSV生成器

  .. 添加 "strict" 选项来验证输入?

.. [#whitespace-delim] 空白分隔符只对外部CSV文件起效

.. [#ASCII-char] 在Python 2中， ``delimiter``、 ``quote`` 
   和 ``escape`` 选项必须为ASCII字符。(csv模块不支持Unicode和所有
   非ASCII字符，即使被编码为utf-8的字符串)。该限制在Python3中不存在。

下列选项可以被识别:

``widths`` : 整型 [, 整型...]
    一个逗号或空格分隔的相对列宽列表。默认等分

``header-rows`` : 整型
    表头所使用的CSV数据的行数。默认为0

``stub-columns`` : 整型
    用作行标题的列数。默认为0

``header`` : CSV数据
    为表格标题补充数据，从主CSV数据中添加独立且在其他任何之前的 ``标题行`` 。必须使用与主CSV数据相同的CSV格式。

``file`` : string (newlines removed)
    CSV数据文件的本地文件系统路径

``url`` : string (whitespace removed)
    指向一个CSV数据文件的网络URL引用

``encoding`` : name of text encoding
    扩展CSV数据(文件或URL)的文本编码。默认与文档编码相同(如果指定了)

``delim`` : char | "tab" | "space" [#whitespace-delim]_
    一个单字符字符串\ [#ASCII-char]_ 用于分隔字段。默认为 ``,`` (逗号)。可以指定为一个Unicode代码点。阅读 :ref:`unicode <dt-unicode>` 指令以获取语法细节

``keepspace`` : flag
    保留分隔符后的空格。默认忽略

``escape`` : char
    一个单字符字符串\ [#ASCII-char]_ 用于转义分隔符或引用字符。
    可以指定为一个Unicode代码点。阅读 :ref:`unicode <dt-unicode>` 指令以获取语法细节。
    默认为重复该字符，如"He said, ""Hi!"""

    .. 添加另一个可能的值, "double", 以显式表名默认例子?

也可以识别通用选项 `:class:`_ 和 `:name:`_.

.. _dt-list-table:

列表表格
------------

:Directive Type: "list-table"
:Doctree Element: :ref:`表格 <dtr-table>`
:Directive Arguments: 1, optional (table title).
:Directive Options: Possible (see below).
:Directive Content: 一个统一的两层无序列表

(Docutils 0.3.8. 新增。只是一个初始实现， `更多想法`__ 将来可能会实现)

__ ../../dev/rst/alternatives.html#list-driven-tables

"list-table"指令用于从统一的两层无需列表中的数据创建一个表格。"统一"意味着每个子列表(二级列表)必须包含相同数量的列表项。

例子::

    .. list-table:: Frozen Delights!
       :widths: 15 10 30
       :header-rows: 1

       * - Treat
         - Quantity
         - Description
       * - Albatross
         - 2.99
         - On a stick!
       * - Crunchy Frog
         - 1.49
         - If we took the bones out, it wouldn't be
           crunchy, now would it?
       * - Gannet Ripple
         - 1.99
         - On a stick!

下列选项可以被识别:

``widths`` : 整型 [整型...]
    一个逗号或空格分隔的相对列宽列表。默认等分。

``header-rows`` : 整型
    表头所使用的CSV数据的行数。默认为0

``stub-columns`` : 整型
    用作行标题的列数。默认为0

也可以识别通用选项 `:class:`_ 和 `:name:`_.

.. _dt-document-parts:



水平线学习
===============


显示标记学习
===============

引用学习
===============


超链接学习
===============



图片学习
===============

有两个图片指令: "image"和"figure"

图片
------

.. _dt-image:


:Directive Type: "image"
:Doctree Element: :ref:`图片 <dtr-image>`
:Directive Arguments: One, required (image URI).
:Directive Options: Possible.
:Directive Content: None.

一个"image"是一个简单的图片::

    .. image:: picture.png

.. hint::

    一般上面图片的“.. image:: picture.png”中的“picture.png”如果不在同一路径，都需要用绝对路径。即在图片名前面加一个“/”。


行内图片可以在 :ref:`替代定义 <rst-substitution-definitions>` 中使用"image"指令来定义。

图片源文件的URI在指令参数中确定。因为有超链接目标，图片URI可以与显式标记开始字符和目标名称在同一行开始，也可以在紧跟的缩进文本块中(中间没有空行)开始。如果连接块有多行，它们会被删除开始和结束的空格并合并到一起。

.. _dt-image-options:

可选的，图片链接块可以包含一个平面字段列表，图片选项。例如::

    .. image:: picture.jpeg
       :height: 100px
       :width: 200 px
       :scale: 50 %
       :alt: alternate text
       :align: right

下列选项可以被识别:

``alt`` : 文本
    替换文本: 当应用无法显示图片时，会显示图片的一个简短的描述或
    由应用为视觉受损的用户读出。

``height`` : :ref:`长度 <rst-length-units>`
    图片所需要的高。用于存储空间或比例尺图片的纵向。当"scale"也被
    指定了，它们会组合到一起。例如，一个高位200px且比例尺为50等
    价于高位100px且没有比例尺。

``width`` : 当前行宽度的 :ref:`长度 <rst-length-units>` 或 :ref:`百分比 <rst-percentage-units>`
    图片的宽度。用于存储空间或比例尺图片的横向类似"height"，当指定
    "scale"选项，则会被组合。

``scale`` : 整数百分比("%"符号是可选的)
    图片的统一缩放因子。默认"100%"，即无缩放。

    如果未指定高度和宽度选项，如果安装了 `Python图片库` (PIL)且图片有效，则其会被会用于决定它们。

``align`` : "top", "middle", "bottom", "left", "center", or "right"
    图片的对齐方式，等价于HTML的 ``<img>`` 标签的"align"属性。
    值"顶端"、"居中"、"底部"用于控制图片的纵向对齐(与文本基线关联)。它们只对行内图片(替代)有用。
    值"左"、"中"、"右"用于控制图片的横向对齐，允许图片漂浮，文字围绕
    图片。具体的行为取决于浏览器或用于渲染的软件。

``target`` : 文本(URI或引用名称)
    将图片变为超链接引用("可点击")。可选参数是一个URI(相对或绝对)，或一个包含下划线前缀的 :ref:`引用名称 <rst-reference-names>` 。


以及通用选项 `:class:` and `:name:`.

.. _dt-figure:

figure
------

:Directive Type: "figure"
:Doctree Elements: :ref:`dtr-figure`, :ref:`图片 <dtr-image>`, :ref:`标题 <dtr-caption>`, :ref:`铭文 <dtr-legend>`
:Directive Arguments: One, required (image URI).
:Directive Options: Possible.
:Directive Content: Interpreted as the figure caption and an optional
                    legend.

一个"figure"指令由 :ref:`图片 <dtr-image>` 数据(包含 :ref:`图片选项 <dt-image-options>`)和一个可选的标题(一个单行段落)和一个可选的铭文(任意正文元素)组成。对于基于页面输出的媒体，如果这对页面布局有帮助，figures可以浮动到一个不同的位置::

    .. figure:: picture.png
       :scale: 50 %
       :alt: map to buried treasure

       这是figure的标题(一个简单的段落)。

       铭文由标题后的所有元素组成。在本例中，其由本段和之后的表格组成:

       +-----------------------+-----------------------+
       | Symbol                | Meaning               |
       +=======================+=======================+
       | .. image:: tent.png   | Campground            |
       +-----------------------+-----------------------+
       | .. image:: waves.png  | Lake                  |
       +-----------------------+-----------------------+
       | .. image:: peak.png   | Mountain              |
       +-----------------------+-----------------------+

标题段落之前和铭文段落之前必须有空行。指定一个没有标题的铭文，在标题
的位置使用空注释("..")。

"figure"指令支持"image"指令的所有选项(见上述 :ref:`图片选项 <dt-image-options>` )。这些选项(除了"对齐")会被传递给图片。

``align`` : "left", "center", or "right"
    figure的横向对齐，允许图片浮动及文字围绕它。具体行为取决于浏览器
    或渲染它的软件。

另外，下列选项可以被识别:

``figwidth`` : "image", 当前行宽度的 :ref:`长度 <rst-length-units>` 或 :ref:`百分比 <rst-percentage-units>`
    figure的宽度。限制figure使用的横向空间。允许使用一个特殊的值
    "image"，此时使用所包含的图片的实际宽度(需要 `Python图片库`)。如果图片文件无法找到或需要的软件无法使用，该选项
    会被忽略。

    设置"figure"文档树元素的"width"属性。

    该选项不缩放包含的图片，需要使用"width"图片选项来缩放::

        +---------------------------+
        |        figure             |
        |                           |
        |<------ figwidth --------->|
        |                           |
        |  +---------------------+  |
        |  |     image           |  |
        |  |                     |  |
        |  |<--- width --------->|  |
        |  +---------------------+  |
        |                           |
        |The figure's caption should|
        |wrap at this width.        |
        +---------------------------+

``figclass`` : 文本
    在figure元素上设置一个 :ref:`"类" <dtr-classes>` 属性值。详见下面的 :ref:`类 <dt-class>` 指令。



It is methioned by [Ref]_ that C++ is good.



注释学习
===============

代码块学习
===============

.. [Ref] 《zzq's talk》

警告提示集合
===============

**警告/提示关键字包括11个：**::

    attention, caution, danger, error, hint, important, note, tip, warning, admonition, title

注意(note)
---------------

**样例展示：**

----

.. note::

    测试注意(note)。



**上面换行功能实现方法，以下是rST源码显示样例**::

    .. note::

        测试注意(note)。

----

提示/小技巧(tip)
---------------

**样例展示：**

----

.. tip::

    小技巧测试(tip)。

**上面换行功能实现方法，以下是rST源码显示样例**::

    .. tip::

        小技巧测试(tip)。

----

其他警告提示的关键字的作用方法和前两个相同。以下是其他关键字的显示结果。


.. warning::

    warning

.. attention::

    attention

.. caution::

    caution

.. error::

    error

.. important::

    important

.. hint::

    hint

.. danger::

    danger

.. admonition::

    admonition



