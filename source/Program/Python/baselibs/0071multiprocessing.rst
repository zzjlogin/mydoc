.. _python.multiprocessing:

======================================================================================================================================================
:mod:`multiprocessing` --- 多进程并行执行
======================================================================================================================================================

.. module:: multiprocessing


.. contents::


简介
======================================================================================================================================================


这个模块和threading不同点是，通过进程来实现并行运行。

通过进程来实现并行计算，这样的进程之间的内存控制是独立的，默认情况不同进程之间不能共享内存（线程之间是共享的）。

multiprocess库的出现很大程度上是为了弥补thread库因为GIL而低效的缺陷。
它完整的复制了一套thread所提供的接口方便迁移。唯一的不同就是它使用了多进程而不是多线程。
每个进程有自己的独立的GIL，因此也不会出现进程之间的GIL争抢。



使用实例
======================================================================================================================================================

进程间数据共享
------------------------------------------------------------------------------------------------------------------------------------------------------

如果要进程之间处理同一个数据，可以运用数组以及进程里面的manager方法，下面代码介绍的是manager方法

.. code-block:: python 
    :linenos:

   from multiprocessing import Process
   from multiprocessing import Manager

   def f1(i,dic):
      dic[i] = 200+i
      print(dic.values())
   if __name__ == '__main__': #进程间默认不能共用内存
      manager = Manager()
      dic = manager.dict()#这是一个特殊的字典
   
   
      for i in range(10):
         p = Process(target=f1,args=(i,dic))
         p.start()
         p.join()







参考详解
======================================================================================================================================================



